// <auto-generated />
using System;
using AspNET.Models;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace AspNET.Migrations
{
    [DbContext(typeof(InvoiceDbContext))]
    [Migration("20201025083735_Initial")]
    partial class Initial
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.9")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("AspNET.Models.InvoiceModel.Body.CausaleModel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("BodyModelId")
                        .HasColumnType("int");

                    b.Property<string>("Causale")
                        .HasColumnType("nvarchar(200)")
                        .HasMaxLength(200);

                    b.HasKey("Id");

                    b.HasIndex("BodyModelId");

                    b.ToTable("Causale");
                });

            modelBuilder.Entity("AspNET.Models.InvoiceModel.Body.DatiBeniServiziModel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<decimal?>("Aliquota")
                        .HasColumnType("decimal(6,2)");

                    b.Property<int>("BodyModelId")
                        .HasColumnType("int");

                    b.Property<string>("Descrizione")
                        .IsRequired()
                        .HasColumnType("nvarchar(1000)")
                        .HasMaxLength(1000);

                    b.Property<decimal>("Importo")
                        .HasColumnType("decimal(15,2)");

                    b.Property<decimal?>("Imposta")
                        .IsRequired()
                        .HasColumnType("decimal(15,2)");

                    b.Property<string>("Natura")
                        .HasColumnType("nvarchar(2)")
                        .HasMaxLength(2);

                    b.Property<string>("RiferimentoNormativo")
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.HasKey("Id");

                    b.HasIndex("BodyModelId");

                    b.ToTable("DatiBeniServizi");
                });

            modelBuilder.Entity("AspNET.Models.InvoiceModel.Body.DatiCassaPrevidenzialeModel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<decimal>("AlCassa")
                        .HasColumnType("decimal(6,2)");

                    b.Property<decimal>("AliquotaIVA")
                        .HasColumnType("decimal(6,2)");

                    b.Property<int>("BodyModelId")
                        .HasColumnType("int");

                    b.Property<decimal>("ImponibileCassa")
                        .HasColumnType("decimal(15,2)");

                    b.Property<decimal>("ImportoContributoCassa")
                        .HasColumnType("decimal(15,2)");

                    b.Property<string>("Natura")
                        .HasColumnType("nvarchar(2)")
                        .HasMaxLength(2);

                    b.Property<string>("RiferimentoAmministrazione")
                        .HasColumnType("nvarchar(20)")
                        .HasMaxLength(20);

                    b.Property<string>("Ritenuta")
                        .HasColumnType("nvarchar(2)")
                        .HasMaxLength(2);

                    b.Property<string>("TipoCassa")
                        .IsRequired()
                        .HasColumnType("nvarchar(4)")
                        .HasMaxLength(4);

                    b.HasKey("Id");

                    b.HasIndex("BodyModelId");

                    b.ToTable("DatiCassaPrevidenziale");
                });

            modelBuilder.Entity("AspNET.Models.InvoiceModel.Body.DatiDDTModel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("BodyModelId")
                        .HasColumnType("int");

                    b.Property<DateTime>("DataDDT")
                        .HasColumnType("datetime2");

                    b.Property<string>("NumeroDDT")
                        .IsRequired()
                        .HasColumnType("nvarchar(20)")
                        .HasMaxLength(20);

                    b.HasKey("Id");

                    b.HasIndex("BodyModelId");

                    b.ToTable("DatiDDT");
                });

            modelBuilder.Entity("AspNET.Models.InvoiceModel.Body.DatiModel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("BodyModelId")
                        .HasColumnType("int");

                    b.Property<string>("CodiceCIG")
                        .HasColumnType("nvarchar(15)")
                        .HasMaxLength(15);

                    b.Property<string>("CodiceCUP")
                        .HasColumnType("nvarchar(15)")
                        .HasMaxLength(15);

                    b.Property<string>("CodiceCommessaConvenzione")
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.Property<DateTime?>("Data")
                        .HasColumnType("datetime2");

                    b.Property<string>("DataType")
                        .IsRequired()
                        .HasColumnType("nvarchar(20)")
                        .HasMaxLength(20);

                    b.Property<string>("IdDocumento")
                        .IsRequired()
                        .HasColumnType("nvarchar(20)")
                        .HasMaxLength(20);

                    b.Property<string>("NumItem")
                        .HasColumnType("nvarchar(20)")
                        .HasMaxLength(20);

                    b.HasKey("Id");

                    b.HasIndex("BodyModelId");

                    b.ToTable("Dati");
                });

            modelBuilder.Entity("AspNET.Models.InvoiceModel.Body.DatiPagamentoModel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool>("Active")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(false);

                    b.Property<int>("BodyModelId")
                        .HasColumnType("int");

                    b.Property<string>("CondizioniPagamento")
                        .IsRequired()
                        .HasColumnType("nvarchar(4)")
                        .HasMaxLength(4);

                    b.HasKey("Id");

                    b.HasIndex("BodyModelId");

                    b.ToTable("DatiPagamento");
                });

            modelBuilder.Entity("AspNET.Models.InvoiceModel.Body.DatiRiepilogoModel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<decimal>("AliquotaIVA")
                        .HasColumnType("decimal(6,2)");

                    b.Property<decimal?>("Arrotondamento")
                        .HasColumnType("decimal(21,2)");

                    b.Property<int>("BodyModelId")
                        .HasColumnType("int");

                    b.Property<string>("EsigibilitaIVA")
                        .HasColumnType("nvarchar(1)")
                        .HasMaxLength(1);

                    b.Property<decimal>("ImponibileImporto")
                        .HasColumnType("decimal(15,2)");

                    b.Property<decimal>("Imposta")
                        .HasColumnType("decimal(15,2)");

                    b.Property<string>("Natura")
                        .HasColumnType("nvarchar(2)")
                        .HasMaxLength(2);

                    b.Property<string>("RiferimentoNormativo")
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.Property<decimal?>("SpeseAccessorie")
                        .HasColumnType("decimal(15,2)");

                    b.HasKey("Id");

                    b.HasIndex("BodyModelId");

                    b.ToTable("DatiRiepilogo");
                });

            modelBuilder.Entity("AspNET.Models.InvoiceModel.Body.DatiRitenutaModel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<decimal?>("AliquotaRitenuta")
                        .HasColumnType("decimal(6,2)");

                    b.Property<int>("BodyModelId")
                        .HasColumnType("int");

                    b.Property<string>("CausalePagamento")
                        .HasColumnType("nvarchar(1)")
                        .HasMaxLength(1);

                    b.Property<decimal?>("ImportoRitenuta")
                        .HasColumnType("decimal(15,2)");

                    b.Property<string>("TipoRitenuta")
                        .HasColumnType("nvarchar(4)")
                        .HasMaxLength(4);

                    b.HasKey("Id");

                    b.HasIndex("BodyModelId");

                    b.ToTable("DatiRitenuta");
                });

            modelBuilder.Entity("AspNET.Models.InvoiceModel.Body.DatiSALModel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("BodyModelId")
                        .HasColumnType("int");

                    b.Property<int>("RiferimentoFase")
                        .HasColumnType("int")
                        .HasMaxLength(3);

                    b.HasKey("Id");

                    b.HasIndex("BodyModelId");

                    b.HasIndex("Id", "RiferimentoFase")
                        .IsUnique();

                    b.ToTable("DatiSAL");
                });

            modelBuilder.Entity("AspNET.Models.InvoiceModel.Body.DettaglioLineeModel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<decimal>("AliquotaIVA")
                        .HasColumnType("decimal(6,2)");

                    b.Property<int>("BodyModelId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("DataFinePeriodo")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DataInizioPeriodo")
                        .HasColumnType("datetime2");

                    b.Property<string>("Descrizione")
                        .IsRequired()
                        .HasColumnType("nvarchar(1000)")
                        .HasMaxLength(1000);

                    b.Property<string>("Natura")
                        .HasColumnType("nvarchar(2)")
                        .HasMaxLength(2);

                    b.Property<int>("NumeroLinea")
                        .HasColumnType("int")
                        .HasMaxLength(4);

                    b.Property<decimal>("PrezzoTotale")
                        .HasColumnType("decimal(21,8)");

                    b.Property<decimal>("PrezzoUnitario")
                        .HasColumnType("decimal(21,8)");

                    b.Property<decimal?>("Quantita")
                        .HasColumnType("decimal(21,8)");

                    b.Property<string>("RiferimentoAmministrazione")
                        .HasColumnType("nvarchar(20)")
                        .HasMaxLength(20);

                    b.Property<string>("Ritenuta")
                        .HasColumnType("nvarchar(2)")
                        .HasMaxLength(2);

                    b.Property<string>("TipoCessionePrestazione")
                        .HasColumnType("nvarchar(2)")
                        .HasMaxLength(2);

                    b.Property<string>("UnitaMisura")
                        .HasColumnType("nvarchar(10)")
                        .HasMaxLength(10);

                    b.HasKey("Id");

                    b.HasIndex("BodyModelId", "NumeroLinea")
                        .IsUnique();

                    b.ToTable("DettaglioLinee");
                });

            modelBuilder.Entity("AspNET.Models.InvoiceModel.Body.Linee.AltriDatiGestionaliModel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("DettaglioLineeModelId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("RiferimentoData")
                        .HasColumnType("datetime2");

                    b.Property<decimal?>("RiferimentoNumero")
                        .HasColumnType("decimal(21,8)");

                    b.Property<string>("RiferimentoTesto")
                        .HasColumnType("nvarchar(60)")
                        .HasMaxLength(60);

                    b.Property<string>("TipoDato")
                        .IsRequired()
                        .HasColumnType("nvarchar(10)")
                        .HasMaxLength(10);

                    b.HasKey("Id");

                    b.HasIndex("DettaglioLineeModelId");

                    b.ToTable("AltriDatiGestionali");
                });

            modelBuilder.Entity("AspNET.Models.InvoiceModel.Body.Linee.CodiceArticoloModel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("CodiceTipo")
                        .IsRequired()
                        .HasColumnType("nvarchar(35)")
                        .HasMaxLength(35);

                    b.Property<string>("CodiceValore")
                        .IsRequired()
                        .HasColumnType("nvarchar(35)")
                        .HasMaxLength(35);

                    b.Property<int>("DettaglioLineeId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("DettaglioLineeId");

                    b.HasIndex("CodiceTipo", "CodiceValore")
                        .IsUnique();

                    b.ToTable("CodiceArticolo");
                });

            modelBuilder.Entity("AspNET.Models.InvoiceModel.Body.Linee.ScontoMaggiorazioneModel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("DettaglioLineeId")
                        .HasColumnType("int");

                    b.Property<decimal?>("Importo")
                        .HasColumnType("decimal(15,2)");

                    b.Property<decimal?>("Percentuale")
                        .HasColumnType("decimal(6,2)");

                    b.Property<string>("Tipo")
                        .IsRequired()
                        .HasColumnType("nvarchar(2)")
                        .HasMaxLength(2);

                    b.HasKey("Id");

                    b.HasIndex("DettaglioLineeId");

                    b.ToTable("ScontoMaggiorazione");
                });

            modelBuilder.Entity("AspNET.Models.InvoiceModel.Body.Pagamenti.DettaglioPagamentoModel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("CFQuietanzante")
                        .HasColumnType("nvarchar(16)")
                        .HasMaxLength(16);

                    b.Property<string>("CodUfficioPostale")
                        .HasColumnType("nvarchar(20)")
                        .HasMaxLength(20);

                    b.Property<string>("CodicePagamento")
                        .HasColumnType("nvarchar(15)")
                        .HasMaxLength(15);

                    b.Property<string>("CognomeQuietanzante")
                        .HasColumnType("nvarchar(60)")
                        .HasMaxLength(60);

                    b.Property<int?>("ContoBancarioId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("DataDecorrenzaPenale")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DataLimitePagamentoAnticipato")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DataRiferimentoTerminiPagamento")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DataScadenzaPagamento")
                        .HasColumnType("datetime2");

                    b.Property<int>("DatiPagamentoModelId")
                        .HasColumnType("int");

                    b.Property<int?>("GiorniTerminiPagamento")
                        .HasColumnType("int")
                        .HasMaxLength(3);

                    b.Property<decimal>("ImportoPagamento")
                        .HasColumnType("decimal(15,2)");

                    b.Property<string>("ModalitaPagamento")
                        .IsRequired()
                        .HasColumnType("nvarchar(4)")
                        .HasMaxLength(4);

                    b.Property<string>("NomeQuietanzante")
                        .HasColumnType("nvarchar(60)")
                        .HasMaxLength(60);

                    b.Property<DateTime?>("PaymentDate")
                        .HasColumnType("datetime2");

                    b.Property<decimal?>("PenalitaPagamentiRitardati")
                        .HasColumnType("decimal(15,2)");

                    b.Property<decimal?>("ScontoPagamentoAnticipato")
                        .HasColumnType("decimal(15,2)");

                    b.Property<string>("TRNCode")
                        .HasColumnType("nvarchar(30)")
                        .HasMaxLength(30);

                    b.Property<string>("TitoloQuietanzante")
                        .HasColumnType("nvarchar(10)")
                        .HasMaxLength(10);

                    b.HasKey("Id");

                    b.HasIndex("DatiPagamentoModelId");

                    b.ToTable("DettaglioPagamento");
                });

            modelBuilder.Entity("AspNET.Models.InvoiceModel.Body.RiferimentoNumeroLinea.RiferimentoNumeroLineaModel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("DatiDDTModelId")
                        .HasColumnType("int");

                    b.Property<int?>("DatiModelId")
                        .HasColumnType("int");

                    b.Property<string>("ModelReference")
                        .HasColumnType("nvarchar(10)")
                        .HasMaxLength(10);

                    b.Property<int>("RiferimentoNumeroLinea")
                        .HasColumnType("int")
                        .HasMaxLength(4);

                    b.HasKey("Id");

                    b.HasIndex("DatiDDTModelId");

                    b.HasIndex("DatiModelId");

                    b.ToTable("RiferimentoNumeroLinea");
                });

            modelBuilder.Entity("AspNET.Models.InvoiceModel.BodyModel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<decimal?>("Arrotondamento")
                        .HasColumnType("decimal(15,2)");

                    b.Property<string>("Art73")
                        .HasColumnType("nvarchar(2)")
                        .HasMaxLength(2);

                    b.Property<string>("BolloVirtuale")
                        .HasColumnType("nvarchar(2)")
                        .HasMaxLength(2);

                    b.Property<string>("CausaleTrasporto")
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.Property<int>("CedentePrestatoreId")
                        .HasColumnType("int");

                    b.Property<int>("CessionarioCommittenteId")
                        .HasColumnType("int");

                    b.Property<DateTime>("Data")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DataFR")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DataFatturaPrincipale")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DataInizioTrasporto")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DataOraConsegna")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DataOraRitiro")
                        .HasColumnType("datetime2");

                    b.Property<string>("Descrizione")
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.Property<string>("Divisa")
                        .IsRequired()
                        .HasColumnType("nvarchar(3)")
                        .HasMaxLength(3);

                    b.Property<string>("ElementiRettificati")
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal?>("ImportoBollo")
                        .HasColumnType("decimal(15,2)");

                    b.Property<decimal?>("ImportoTotaleDocumento")
                        .HasColumnType("decimal(15,2)");

                    b.Property<int?>("LuogoResaId")
                        .HasColumnType("int");

                    b.Property<int>("MetadataId")
                        .HasColumnType("int");

                    b.Property<string>("MezzoTrasporto")
                        .HasColumnType("nvarchar(80)")
                        .HasMaxLength(80);

                    b.Property<string>("Numero")
                        .IsRequired()
                        .HasColumnType("nvarchar(20)")
                        .HasMaxLength(20);

                    b.Property<int?>("NumeroColli")
                        .HasColumnType("int")
                        .HasMaxLength(4);

                    b.Property<string>("NumeroFR")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NumeroFatturaPrincipale")
                        .HasColumnType("nvarchar(20)")
                        .HasMaxLength(20);

                    b.Property<decimal?>("PesoLordo")
                        .HasColumnType("decimal(7,2)");

                    b.Property<decimal?>("PesoNetto")
                        .HasColumnType("decimal(7,2)");

                    b.Property<bool>("Simplified")
                        .HasColumnType("bit");

                    b.Property<string>("TipoDocumento")
                        .IsRequired()
                        .HasColumnType("nvarchar(4)")
                        .HasMaxLength(4);

                    b.Property<string>("TipoResa")
                        .HasColumnType("nvarchar(3)")
                        .HasMaxLength(3);

                    b.Property<string>("UnitaMisuraPeso")
                        .HasColumnType("nvarchar(10)")
                        .HasMaxLength(10);

                    b.Property<int?>("VettoreId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("CedentePrestatoreId");

                    b.HasIndex("CessionarioCommittenteId");

                    b.HasIndex("LuogoResaId")
                        .IsUnique()
                        .HasFilter("[LuogoResaId] IS NOT NULL");

                    b.HasIndex("MetadataId");

                    b.HasIndex("VettoreId");

                    b.HasIndex("Numero", "Data", "CedentePrestatoreId")
                        .IsUnique();

                    b.ToTable("Bodies");
                });

            modelBuilder.Entity("AspNET.Models.InvoiceModel.CliForModel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("AlboProfessionale")
                        .HasColumnType("nvarchar(60)")
                        .HasMaxLength(60);

                    b.Property<decimal?>("CapitaleSociale")
                        .HasColumnType("decimal(15,2)");

                    b.Property<string>("CodEORI")
                        .HasColumnType("nvarchar(17)")
                        .HasMaxLength(17);

                    b.Property<string>("CodiceFiscale")
                        .HasColumnType("nvarchar(16)")
                        .HasMaxLength(16);

                    b.Property<string>("Cognome")
                        .HasColumnType("nvarchar(60)")
                        .HasMaxLength(60);

                    b.Property<DateTime?>("DataIscrizioneAlbo")
                        .HasColumnType("datetime2");

                    b.Property<string>("Denominazione")
                        .HasColumnType("nvarchar(80)")
                        .HasMaxLength(80);

                    b.Property<string>("IdCodice")
                        .HasColumnType("nvarchar(28)")
                        .HasMaxLength(28);

                    b.Property<string>("IdPaese")
                        .HasColumnType("nvarchar(2)")
                        .HasMaxLength(2);

                    b.Property<string>("Nome")
                        .HasColumnType("nvarchar(60)")
                        .HasMaxLength(60);

                    b.Property<string>("NumeroIscrizioneAlbo")
                        .HasColumnType("nvarchar(60)")
                        .HasMaxLength(60);

                    b.Property<string>("NumeroLicenzaGuida")
                        .HasColumnType("nvarchar(20)")
                        .HasMaxLength(20);

                    b.Property<string>("NumeroREA")
                        .HasColumnType("nvarchar(20)")
                        .HasMaxLength(20);

                    b.Property<string>("ProvinciaAlbo")
                        .HasColumnType("nvarchar(2)")
                        .HasMaxLength(2);

                    b.Property<int?>("RappresentanteFiscaleId")
                        .HasColumnType("int");

                    b.Property<string>("RegimeFiscale")
                        .HasColumnType("nvarchar(4)")
                        .HasMaxLength(4);

                    b.Property<string>("RiferimentoAmministrazione")
                        .HasColumnType("nvarchar(20)")
                        .HasMaxLength(20);

                    b.Property<string>("SocioUnico")
                        .HasColumnType("nvarchar(2)")
                        .HasMaxLength(2);

                    b.Property<string>("StatoLiquidazione")
                        .HasColumnType("nvarchar(2)")
                        .HasMaxLength(2);

                    b.Property<string>("Titolo")
                        .HasColumnType("nvarchar(10)")
                        .HasMaxLength(10);

                    b.Property<string>("Ufficio")
                        .HasColumnType("nvarchar(2)")
                        .HasMaxLength(2);

                    b.HasKey("Id");

                    b.HasIndex("CodiceFiscale")
                        .IsUnique()
                        .HasFilter("[CodiceFiscale] IS NOT NULL");

                    b.HasIndex("RappresentanteFiscaleId");

                    b.HasIndex("IdCodice", "IdPaese")
                        .IsUnique()
                        .HasFilter("[IdCodice] IS NOT NULL AND [IdPaese] IS NOT NULL");

                    b.ToTable("CliFor");
                });

            modelBuilder.Entity("AspNET.Models.InvoiceModel.Header.ContattiModel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("CliforModelId")
                        .HasColumnType("int");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.Property<string>("Email")
                        .HasColumnType("nvarchar(256)")
                        .HasMaxLength(256);

                    b.Property<string>("Fax")
                        .HasColumnType("nvarchar(12)")
                        .HasMaxLength(12);

                    b.Property<bool>("StillActive")
                        .HasColumnType("bit");

                    b.Property<string>("Telefono")
                        .HasColumnType("nvarchar(12)")
                        .HasMaxLength(12);

                    b.HasKey("Id");

                    b.HasIndex("CliforModelId");

                    b.HasIndex("Email")
                        .IsUnique()
                        .HasFilter("[Email] IS NOT NULL");

                    b.HasIndex("Fax")
                        .IsUnique()
                        .HasFilter("[Fax] IS NOT NULL");

                    b.HasIndex("Telefono")
                        .IsUnique()
                        .HasFilter("[Telefono] IS NOT NULL");

                    b.ToTable("Contatti");
                });

            modelBuilder.Entity("AspNET.Models.InvoiceModel.Header.ContiBancariModel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("ABI")
                        .HasColumnType("nvarchar(5)")
                        .HasMaxLength(5);

                    b.Property<string>("BIC")
                        .HasColumnType("nvarchar(11)")
                        .HasMaxLength(11);

                    b.Property<string>("CAB")
                        .HasColumnType("nvarchar(5)")
                        .HasMaxLength(5);

                    b.Property<int>("CliforModelId")
                        .HasColumnType("int");

                    b.Property<string>("IBAN")
                        .IsRequired()
                        .HasColumnType("nvarchar(34)")
                        .HasMaxLength(34);

                    b.Property<string>("IstitutoFinanziario")
                        .HasColumnType("nvarchar(80)")
                        .HasMaxLength(80);

                    b.Property<bool>("StillActive")
                        .HasColumnType("bit");

                    b.HasKey("Id");

                    b.HasIndex("CliforModelId");

                    b.HasIndex("IBAN")
                        .IsUnique();

                    b.ToTable("ContiBancari");
                });

            modelBuilder.Entity("AspNET.Models.InvoiceModel.Header.SediModel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("CAP")
                        .IsRequired()
                        .HasColumnType("nvarchar(5)")
                        .HasMaxLength(5);

                    b.Property<int?>("CliforModelId")
                        .HasColumnType("int");

                    b.Property<string>("Comune")
                        .IsRequired()
                        .HasColumnType("nvarchar(60)")
                        .HasMaxLength(60);

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.Property<string>("Indirizzo")
                        .IsRequired()
                        .HasColumnType("nvarchar(60)")
                        .HasMaxLength(60);

                    b.Property<string>("Nazione")
                        .IsRequired()
                        .HasColumnType("nvarchar(2)")
                        .HasMaxLength(2);

                    b.Property<string>("NumeroCivico")
                        .HasColumnType("nvarchar(8)")
                        .HasMaxLength(8);

                    b.Property<string>("Provincia")
                        .HasColumnType("nvarchar(2)")
                        .HasMaxLength(2);

                    b.Property<int?>("StabileOrganizzazioneId")
                        .HasColumnType("int");

                    b.Property<bool>("StillActive")
                        .HasColumnType("bit");

                    b.HasKey("Id");

                    b.HasIndex("CliforModelId");

                    b.HasIndex("StabileOrganizzazioneId");

                    b.HasIndex("Indirizzo", "NumeroCivico", "CAP", "Comune", "Provincia", "Nazione", "StillActive")
                        .IsUnique()
                        .HasFilter("[Indirizzo] IS NOT NULL AND [NumeroCivico] IS NOT NULL AND [CAP] IS NOT NULL AND [Comune] IS NOT NULL AND [Provincia] IS NOT NULL AND [Nazione] IS NOT NULL");

                    b.ToTable("Sedi");
                });

            modelBuilder.Entity("AspNET.Models.InvoiceModel.MetadataModel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("CodiceDestinatario")
                        .IsRequired()
                        .HasColumnType("nvarchar(7)")
                        .HasMaxLength(7);

                    b.Property<string>("FormatoTrasmissione")
                        .IsRequired()
                        .HasColumnType("nvarchar(5)")
                        .HasMaxLength(5);

                    b.Property<int?>("IntermediarioOEmittenteId")
                        .HasColumnType("int");

                    b.Property<string>("PECDestinatario")
                        .HasColumnType("nvarchar(256)")
                        .HasMaxLength(256);

                    b.Property<string>("ProgressivoInvio")
                        .IsRequired()
                        .HasColumnType("nvarchar(10)")
                        .HasMaxLength(10);

                    b.Property<string>("SoggettoEmittente")
                        .HasColumnType("nvarchar(2)")
                        .HasMaxLength(2);

                    b.Property<int>("TrasmittenteId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("IntermediarioOEmittenteId");

                    b.HasIndex("TrasmittenteId");

                    b.ToTable("Metadata");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRole", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(256)")
                        .HasMaxLength(256);

                    b.Property<string>("NormalizedName")
                        .HasColumnType("nvarchar(256)")
                        .HasMaxLength(256);

                    b.HasKey("Id");

                    b.HasIndex("NormalizedName")
                        .IsUnique()
                        .HasName("RoleNameIndex")
                        .HasFilter("[NormalizedName] IS NOT NULL");

                    b.ToTable("AspNetRoles");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<string>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("ClaimType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RoleId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("RoleId");

                    b.ToTable("AspNetRoleClaims");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUser", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<int>("AccessFailedCount")
                        .HasColumnType("int");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Email")
                        .HasColumnType("nvarchar(256)")
                        .HasMaxLength(256);

                    b.Property<bool>("EmailConfirmed")
                        .HasColumnType("bit");

                    b.Property<bool>("LockoutEnabled")
                        .HasColumnType("bit");

                    b.Property<DateTimeOffset?>("LockoutEnd")
                        .HasColumnType("datetimeoffset");

                    b.Property<string>("NormalizedEmail")
                        .HasColumnType("nvarchar(256)")
                        .HasMaxLength(256);

                    b.Property<string>("NormalizedUserName")
                        .HasColumnType("nvarchar(256)")
                        .HasMaxLength(256);

                    b.Property<string>("PasswordHash")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PhoneNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("PhoneNumberConfirmed")
                        .HasColumnType("bit");

                    b.Property<string>("SecurityStamp")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("TwoFactorEnabled")
                        .HasColumnType("bit");

                    b.Property<string>("UserName")
                        .HasColumnType("nvarchar(256)")
                        .HasMaxLength(256);

                    b.HasKey("Id");

                    b.HasIndex("NormalizedEmail")
                        .HasName("EmailIndex");

                    b.HasIndex("NormalizedUserName")
                        .IsUnique()
                        .HasName("UserNameIndex")
                        .HasFilter("[NormalizedUserName] IS NOT NULL");

                    b.ToTable("AspNetUsers");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<string>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("ClaimType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("AspNetUserClaims");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<string>", b =>
                {
                    b.Property<string>("LoginProvider")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ProviderKey")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ProviderDisplayName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("LoginProvider", "ProviderKey");

                    b.HasIndex("UserId");

                    b.ToTable("AspNetUserLogins");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserRole<string>", b =>
                {
                    b.Property<string>("UserId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("RoleId")
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("UserId", "RoleId");

                    b.HasIndex("RoleId");

                    b.ToTable("AspNetUserRoles");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<string>", b =>
                {
                    b.Property<string>("UserId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("LoginProvider")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Value")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("UserId", "LoginProvider", "Name");

                    b.ToTable("AspNetUserTokens");
                });

            modelBuilder.Entity("AspNET.Models.InvoiceModel.Body.CausaleModel", b =>
                {
                    b.HasOne("AspNET.Models.InvoiceModel.BodyModel", "BodyModel")
                        .WithMany("Causale")
                        .HasForeignKey("BodyModelId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("AspNET.Models.InvoiceModel.Body.DatiBeniServiziModel", b =>
                {
                    b.HasOne("AspNET.Models.InvoiceModel.BodyModel", "BodyModel")
                        .WithMany("DatiBeniServizi")
                        .HasForeignKey("BodyModelId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("AspNET.Models.InvoiceModel.Body.DatiCassaPrevidenzialeModel", b =>
                {
                    b.HasOne("AspNET.Models.InvoiceModel.BodyModel", "BodyModel")
                        .WithMany("DatiCassaPrevidenziale")
                        .HasForeignKey("BodyModelId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("AspNET.Models.InvoiceModel.Body.DatiDDTModel", b =>
                {
                    b.HasOne("AspNET.Models.InvoiceModel.BodyModel", "BodyModel")
                        .WithMany("DatiDDT")
                        .HasForeignKey("BodyModelId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("AspNET.Models.InvoiceModel.Body.DatiModel", b =>
                {
                    b.HasOne("AspNET.Models.InvoiceModel.BodyModel", "BodyModel")
                        .WithMany("Dati")
                        .HasForeignKey("BodyModelId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("AspNET.Models.InvoiceModel.Body.DatiPagamentoModel", b =>
                {
                    b.HasOne("AspNET.Models.InvoiceModel.BodyModel", "BodyModel")
                        .WithMany("DatiPagamento")
                        .HasForeignKey("BodyModelId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("AspNET.Models.InvoiceModel.Body.DatiRiepilogoModel", b =>
                {
                    b.HasOne("AspNET.Models.InvoiceModel.BodyModel", "BodyModel")
                        .WithMany("DatiRiepilogo")
                        .HasForeignKey("BodyModelId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("AspNET.Models.InvoiceModel.Body.DatiRitenutaModel", b =>
                {
                    b.HasOne("AspNET.Models.InvoiceModel.BodyModel", "BodyModel")
                        .WithMany("DatiRitenuta")
                        .HasForeignKey("BodyModelId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("AspNET.Models.InvoiceModel.Body.DatiSALModel", b =>
                {
                    b.HasOne("AspNET.Models.InvoiceModel.BodyModel", "BodyModel")
                        .WithMany("DatiSAL")
                        .HasForeignKey("BodyModelId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("AspNET.Models.InvoiceModel.Body.DettaglioLineeModel", b =>
                {
                    b.HasOne("AspNET.Models.InvoiceModel.BodyModel", "BodyModel")
                        .WithMany("DettaglioLinee")
                        .HasForeignKey("BodyModelId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("AspNET.Models.InvoiceModel.Body.Linee.AltriDatiGestionaliModel", b =>
                {
                    b.HasOne("AspNET.Models.InvoiceModel.Body.DettaglioLineeModel", "DettaglioLinee")
                        .WithMany("AltriDatiGestionali")
                        .HasForeignKey("DettaglioLineeModelId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("AspNET.Models.InvoiceModel.Body.Linee.CodiceArticoloModel", b =>
                {
                    b.HasOne("AspNET.Models.InvoiceModel.Body.DettaglioLineeModel", "DettaglioLinee")
                        .WithMany("CodiceArticolo")
                        .HasForeignKey("DettaglioLineeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("AspNET.Models.InvoiceModel.Body.Linee.ScontoMaggiorazioneModel", b =>
                {
                    b.HasOne("AspNET.Models.InvoiceModel.Body.DettaglioLineeModel", "DettaglioLinee")
                        .WithMany("ScontoMaggiorazione")
                        .HasForeignKey("DettaglioLineeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("AspNET.Models.InvoiceModel.Body.Pagamenti.DettaglioPagamentoModel", b =>
                {
                    b.HasOne("AspNET.Models.InvoiceModel.Body.DatiPagamentoModel", "DatiPagamento")
                        .WithMany("DettaglioPagamento")
                        .HasForeignKey("DatiPagamentoModelId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("AspNET.Models.InvoiceModel.Body.RiferimentoNumeroLinea.RiferimentoNumeroLineaModel", b =>
                {
                    b.HasOne("AspNET.Models.InvoiceModel.Body.DatiDDTModel", "DatiDDTModel")
                        .WithMany("RiferimentoNumeroLinea")
                        .HasForeignKey("DatiDDTModelId");

                    b.HasOne("AspNET.Models.InvoiceModel.Body.DatiModel", "DatiModel")
                        .WithMany("RiferimentoNumeroLinea")
                        .HasForeignKey("DatiModelId");
                });

            modelBuilder.Entity("AspNET.Models.InvoiceModel.BodyModel", b =>
                {
                    b.HasOne("AspNET.Models.InvoiceModel.CliForModel", "CedentePrestatore")
                        .WithMany("BodyModelCP")
                        .HasForeignKey("CedentePrestatoreId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("AspNET.Models.InvoiceModel.CliForModel", "CessionarioCommittente")
                        .WithMany("BodyModelCC")
                        .HasForeignKey("CessionarioCommittenteId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("AspNET.Models.InvoiceModel.Header.SediModel", "LuogoResa")
                        .WithOne("Body")
                        .HasForeignKey("AspNET.Models.InvoiceModel.BodyModel", "LuogoResaId");

                    b.HasOne("AspNET.Models.InvoiceModel.MetadataModel", "Metadata")
                        .WithMany("Bodies")
                        .HasForeignKey("MetadataId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("AspNET.Models.InvoiceModel.CliForModel", "Vettore")
                        .WithMany("BodyModelVettore")
                        .HasForeignKey("VettoreId")
                        .OnDelete(DeleteBehavior.NoAction);
                });

            modelBuilder.Entity("AspNET.Models.InvoiceModel.CliForModel", b =>
                {
                    b.HasOne("AspNET.Models.InvoiceModel.CliForModel", "RappresentanteFiscale")
                        .WithMany("Rappresentati")
                        .HasForeignKey("RappresentanteFiscaleId")
                        .OnDelete(DeleteBehavior.NoAction);
                });

            modelBuilder.Entity("AspNET.Models.InvoiceModel.Header.ContattiModel", b =>
                {
                    b.HasOne("AspNET.Models.InvoiceModel.CliForModel", "Clifor")
                        .WithMany("Contatti")
                        .HasForeignKey("CliforModelId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("AspNET.Models.InvoiceModel.Header.ContiBancariModel", b =>
                {
                    b.HasOne("AspNET.Models.InvoiceModel.CliForModel", "Clifor")
                        .WithMany("ContiBancari")
                        .HasForeignKey("CliforModelId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("AspNET.Models.InvoiceModel.Header.SediModel", b =>
                {
                    b.HasOne("AspNET.Models.InvoiceModel.CliForModel", "Clifor")
                        .WithMany("Sedi")
                        .HasForeignKey("CliforModelId")
                        .OnDelete(DeleteBehavior.NoAction);

                    b.HasOne("AspNET.Models.InvoiceModel.CliForModel", "StabileOrganizzazione")
                        .WithMany("StabileOrganizzazione")
                        .HasForeignKey("StabileOrganizzazioneId")
                        .OnDelete(DeleteBehavior.NoAction);
                });

            modelBuilder.Entity("AspNET.Models.InvoiceModel.MetadataModel", b =>
                {
                    b.HasOne("AspNET.Models.InvoiceModel.CliForModel", "IntermediarioOEmittente")
                        .WithMany("IntermediarioOEmittente")
                        .HasForeignKey("IntermediarioOEmittenteId")
                        .OnDelete(DeleteBehavior.NoAction);

                    b.HasOne("AspNET.Models.InvoiceModel.CliForModel", "Trasmittente")
                        .WithMany("Trasmittente")
                        .HasForeignKey("TrasmittenteId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityRole", null)
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserRole<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityRole", null)
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
